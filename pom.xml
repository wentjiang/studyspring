<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.wentjiang.study.spring</groupId>
    <artifactId>study.spring</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>study.spring Maven Webapp</name>
    <url>http://maven.apache.org</url>

    <properties>
        <servlet-api.version>3.1.0</servlet-api.version>
        <jsp-api.version>2.3.1</jsp-api.version>
        <jstl.version>1.2</jstl.version>
        <spring.version>4.2.5.RELEASE</spring.version>
        <jackson.version>2.5.1</jackson.version>
        <jackson>1.9.13</jackson>
        <slf4j.version>1.7.19</slf4j.version>
        <logback.version>1.1.6</logback.version>
        <mybatis.version>3.3.1</mybatis.version>
        <mybatis-spring.version>1.2.4</mybatis-spring.version>
        <mybatis-pagehelper.version>4.1.2</mybatis-pagehelper.version>
        <junit.version>4.11</junit.version>
        <mysql-connector-java.version>5.1.34</mysql-connector-java.version>
        <lombok.version>1.16.10</lombok.version>
        <guava.version>19.0</guava.version>
        <joda-time.version>2.9.2</joda-time.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <commons-fileupload.version>1.3.1</commons-fileupload.version>
        <commons-beanutils.version>1.9.2</commons-beanutils.version>
        <commons-io.version>2.4</commons-io.version>
        <fastjson.version>1.2.8</fastjson.version>
        <dozer.version>5.5.1</dozer.version>
        <hibernate-validator.version>5.1.1.Final</hibernate-validator.version>
        <cglib-nodep.version>2.2.2</cglib-nodep.version>
        <aspectjweaver.version>1.7.3</aspectjweaver.version>
        <poi.version>3.11</poi.version>
        <java.building.version>1.7</java.building.version>
        <encoding>UTF-8</encoding>
    </properties>

    <dependencies>
        <!-- Web begin -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>${jsp-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- Web end -->

        <!-- LOGGING begin -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- 代码直接调用log4j会被桥接到slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- 代码直接调用common-logging会被桥接到slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- 代码直接调用java.util.logging会被桥接到slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- LOGGING end -->

        <!-- DB begin -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>${mybatis-spring.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>${mybatis-pagehelper.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
        </dependency>
        <!-- DB end -->

        <!-- Tools begin -->
        <!-- jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- jackson -->

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>${cglib-nodep.version}</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectjweaver.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>${dozer.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!-- Test begin -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Test end -->
    </dependencies>
    <!-- Package as an executable jar -->
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>logback.xml</include>
                    <include>*.properties</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        <finalName>study.spring</finalName>
        <plugins>
            <!-- compiler插件, 设定JDK版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.building.version}</source>
                    <target>${java.building.version}</target>
                    <encoding>${encoding}</encoding>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>

            <!-- mybatis 生成代码插件 -->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.5</version>
                <configuration>
                    <configurationFile>src/main/resources/mybatis/generator.xml</configurationFile>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.mybatis.generator</groupId>
                        <artifactId>mybatis-generator-core</artifactId>
                        <version>1.3.5</version>
                    </dependency>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql-connector-java.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- test插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!-- war打包插件, 设定war包名称不带版本号 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <warSourceExcludes>static/**</warSourceExcludes>
                </configuration>
            </plugin>

            <!-- YUI Compressor Maven压缩插件 -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>1.5.1</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 读取js,css文件采用UTF-8编码 -->
                    <encoding>UTF-8</encoding>
                    <!-- 不显示js可能的错误 -->
                    <jswarn>false</jswarn>
                    <!-- 若存在已压缩的文件，会先对比源文件是否有改动 有改动便压缩，无改动就不压缩 -->
                    <force>true</force>
                    <!-- 在指定的列号后插入新行 -->
                    <linebreakpos>-1</linebreakpos>
                    <!-- 压缩之前先执行聚合文件操作 -->
                    <preProcessAggregates>true</preProcessAggregates>
                    <!-- 压缩后保存文件后缀 -->
                    <nosuffix>true</nosuffix>
                    <!--<suffix>.min</suffix>-->
                    <!-- 源目录，即需压缩的根目录 -->
                    <sourceDirectory>${basedir}/src/main/webapp/static</sourceDirectory>
                    <!-- 压缩后输出文件目录 -->
                    <outputDirectory>${basedir}/target/static</outputDirectory>
                    <!-- 压缩js和css文件 -->
                    <includes>
                        <include>js/**/*.js</include>
                        <include>css/**/*.css</include>
                    </includes>
                    <!-- 以下目录和文件不会被压缩 -->
                    <excludes>
                        <exclude>js/lib/jquery-2.2.1.min.js</exclude>
                    </excludes>
                    <!-- 聚合文件 -->
                    <aggregations>
                        <aggregation>
                            <!-- 合并每一个文件后插入一新行 -->
                            <insertNewLine>true</insertNewLine>
                            <!-- 需合并文件的根文件夹 -->
                            <inputDir>${basedir}/src/main/webapp/static/js</inputDir>
                            <!-- 最终合并的输出文件 -->
                            <output>${basedir}/src/main/webapp/static/js/lib.js</output>
                            <!-- 把以下js文件合并成一个js文件，是按顺序合并的 -->
                            <includes>
                                <include>lib/jquery-1.12.3.js</include>
                            </includes>
                        </aggregation>
                        <aggregation>
                            <!-- 合并每一个文件后插入一新行 -->
                            <insertNewLine>true</insertNewLine>
                            <!-- 需合并文件的根文件夹 -->
                            <inputDir>${basedir}/src/main/webapp/static/js</inputDir>
                            <!-- 最终合并的输出文件 -->
                            <output>${basedir}/src/main/webapp/static/js/mobile-lib.js</output>
                            <!-- 把以下js文件合并成一个js文件，是按顺序合并的 -->
                            <includes>
                                <include>lib/jquery-2.2.1.min.js</include>
                            </includes>
                        </aggregation>
                        <aggregation>
                            <!-- 合并每一个文件后插入一新行 -->
                            <insertNewLine>true</insertNewLine>
                            <!-- 需合并文件的根文件夹 -->
                            <inputDir>${basedir}/src/main/webapp/static/js</inputDir>
                            <!-- 最终合并的输出文件 -->
                            <output>${basedir}/src/main/webapp/static/js/client-lib.js</output>
                            <!-- 把以下js文件合并成一个js文件，是按顺序合并的 -->
                            <includes>
                                <include>lib/jquery-2.2.1.min.js</include>
                            </includes>
                        </aggregation>
                    </aggregations>
                </configuration>
            </plugin>

            <!-- 复制静态文件到静态目录 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>copy_static</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="${copy_static}">
                                <echo message="copy static file to static.dir ..."/>
                                <delete dir="${static.dir}/js"/>
                                <delete dir="${static.dir}/css"/>
                                <delete dir="${static.dir}/img"/>
                                <copy todir="${static.dir}" overwrite="true" includeEmptyDirs="true">
                                    <fileset dir="src/main/webapp/static">
                                        <include name="**"/>
                                        <exclude name="js/**"/>
                                        <exclude name="css/**"/>
                                    </fileset>
                                    <fileset dir="target/static">
                                        <include name="**"/>
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy_static_src</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="${copy_static_src}">
                                <echo message="copy static src file to static.dir ..."/>
                                <delete dir="${static.dir}/js"/>
                                <delete dir="${static.dir}/css"/>
                                <delete dir="${static.dir}/img"/>
                                <copy todir="${static.dir}" overwrite="true" includeEmptyDirs="true">
                                    <fileset dir="src/main/webapp/static">
                                        <include name="**"/>
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <copy_static>false</copy_static>
                <copy_static_src>true</copy_static_src>
                <static.dir>D:/static</static.dir>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <finalName>spring.study.com.dev</finalName>
                <filters>
                    <filter>profile-dev.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <copy_static>true</copy_static>
                <copy_static_src>false</copy_static_src>
                <static.dir>D:/static</static.dir>
            </properties>
            <build>
                <finalName>spring.study.com.test</finalName>
                <filters>
                    <filter>profile-test.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>staging</id>
            <properties>
                <copy_static>false</copy_static>
                <copy_static_src>false</copy_static_src>
            </properties>
            <build>
                <finalName>spring.study.com.staging</finalName>
                <filters>
                    <filter>profile-staging.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <copy_static>false</copy_static>
                <copy_static_src>false</copy_static_src>
            </properties>
            <build>
                <finalName>spring.study.com.prod</finalName>
                <filters>
                    <filter>profile-prod.properties</filter>
                </filters>
            </build>
        </profile>
    </profiles>
</project>
